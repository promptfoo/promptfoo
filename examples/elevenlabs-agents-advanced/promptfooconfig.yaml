# yaml-language-server: $schema=https://promptfoo.dev/config-schema.json
description: ElevenLabs Agents - Advanced features showcase

prompts:
  # Complex multi-turn conversation
  - |
    User: I need to check my order status for ORDER-789
    Agent: I'd be happy to help! Let me look that up for you.
    User: It's urgent - when will it arrive?
    Agent: Let me check the tracking information.
    User: Also, I want to change the delivery address
    Agent: I can help with that. What's the new address?
    User: 123 Main St, San Francisco, CA 94102

  # Multi-character conversation (for multi-voice testing)
  - |
    {
      "turns": [
        {"speaker": "Agent", "message": "Welcome to support! I'm here to help."},
        {"speaker": "Customer", "message": "Hi, I have a question about my bill."},
        {"speaker": "Agent", "message": "Of course! Can you provide your account number?"},
        {"speaker": "Customer", "message": "It's ACC-12345."},
        {"speaker": "Agent", "message": "Thank you. Let me pull up your account."}
      ]
    }

  # Tool-heavy conversation
  - |
    User: I need to create a ticket for a billing issue
    Agent: I can help you create a support ticket. Can you describe the issue?
    User: I was charged twice for the same order
    Agent: That's concerning. Let me create a high-priority ticket for you.
    User: Thanks, and can you check the status of my refund?
    Agent: Let me look that up for you.

providers:
  # LLM Cascading - Quality First
  - id: elevenlabs:agents
    label: Agent with LLM Cascade (Quality First)
    config:
      agentConfig:
        name: Smart Support Agent
        prompt: |
          You are an intelligent customer support agent. Provide helpful,
          accurate responses and use tools when appropriate.
        firstMessage: Hello! I'm your AI support assistant. How can I help?
        language: en
        voiceId: 21m00Tcm4TlvDq8ikWAM
        temperature: 0.7
      llmCascade:
        primary: gpt-4o
        fallback:
          - gpt-4o-mini
          - gpt-3.5-turbo
        cascadeOnError: true
        cascadeOnLatency:
          enabled: true
          maxLatencyMs: 5000
        cascadeOnCost:
          enabled: true
          maxCostPerRequest: 0.05
      evaluationCriteria:
        - name: understanding
          description: Accurately understands user requests
          weight: 1.0
          passingThreshold: 0.9
        - name: helpfulness
          description: Provides helpful responses
          weight: 0.9
          passingThreshold: 0.8
      maxTurns: 15

  # Multi-voice Conversation
  - id: elevenlabs:agents
    label: Agent with Multi-voice (Customer Service)
    config:
      agentConfig:
        name: Customer Service Team
        prompt: |
          You are a professional customer service representative.
          Maintain a helpful, empathetic tone throughout conversations.
        firstMessage: Hi! Welcome to our support center. I'm here to assist you.
        language: en
        temperature: 0.7
      multiVoice:
        characters:
          - name: Agent
            voiceId: 21m00Tcm4TlvDq8ikWAM
            role: Customer support representative
          - name: Customer
            voiceId: 2EiwWnXFnvU5JabPnv8n
            role: Customer seeking help
        defaultVoiceId: 21m00Tcm4TlvDq8ikWAM
      evaluationCriteria:
        - name: professionalism
          description: Maintains professional tone
          weight: 0.8
          passingThreshold: 0.8
        - name: empathy
          description: Shows empathy and understanding
          weight: 0.8
          passingThreshold: 0.7
      maxTurns: 10

  # MCP Integration with Conditional Approval
  - id: elevenlabs:agents
    label: Agent with MCP (Conditional Approval)
    config:
      agentConfig:
        name: MCP-Enabled Agent
        prompt: |
          You are an agent with access to powerful tools via MCP.
          Always ask for user confirmation before executing sensitive operations.
        firstMessage: Hello! I can help with various tasks using my integrated tools.
        language: en
        voiceId: 21m00Tcm4TlvDq8ikWAM
        llmModel: gpt-4o
        temperature: 0.7
      mcpConfig:
        serverUrl: https://mcp.example.com
        approvalPolicy: conditional
        approvalConditions:
          requireApprovalForTools:
            - delete_data
            - send_payment
            - modify_permissions
            - execute_code
          requireApprovalForCost: 1.0
        timeout: 30000
      evaluationCriteria:
        - name: tool_safety
          description: Uses tools safely with appropriate approvals
          weight: 1.0
          passingThreshold: 0.9
      maxTurns: 10

  # Agent with Tools and Tool Mocking
  - id: elevenlabs:agents
    label: Agent with Mocked Tools
    config:
      agentConfig:
        name: Support Agent with Tools
        prompt: |
          You are a customer support agent with access to order tracking,
          ticket creation, and notification tools.
        firstMessage: Hi! I can check orders, create tickets, and more. How can I help?
        language: en
        voiceId: 2EiwWnXFnvU5JabPnv8n
        llmModel: gpt-4o
        temperature: 0.7
        tools:
          - name: get_order_status
            description: Get current status and tracking for an order
            parameters:
              type: object
              properties:
                order_id:
                  type: string
                  description: Order ID or number
              required:
                - order_id
          - name: create_ticket
            description: Create a support ticket
            parameters:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                priority:
                  type: string
                  enum:
                    - low
                    - medium
                    - high
                    - urgent
              required:
                - title
                - description
          - name: send_notification
            description: Send notification to customer
            parameters:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - email
                    - sms
                message:
                  type: string
              required:
                - type
                - message
      toolMockConfig:
        get_order_status:
          returnValue:
            order_id: ORDER-789
            status: shipped
            tracking_number: TRACK123456
            eta: '2024-10-28'
            carrier: UPS
          latencyMs: 500
        create_ticket:
          returnValue:
            ticket_id: TICKET-456
            status: created
            priority: high
          latencyMs: 800
        send_notification:
          returnValue:
            sent: true
            message_id: MSG-789
          latencyMs: 300
      evaluationCriteria:
        - name: tool_usage
          description: Uses tools appropriately and effectively
          weight: 1.0
          passingThreshold: 0.8
        - name: accuracy
          description: Provides accurate information from tools
          weight: 1.0
          passingThreshold: 0.9
      maxTurns: 12

  # Agent with Post-call Webhook
  - id: elevenlabs:agents
    label: Agent with Webhook Notifications
    config:
      agentConfig:
        name: Webhook-enabled Agent
        prompt: |
          You are a support agent. After each conversation, a summary
          will be sent to the support team via webhook.
        firstMessage: Hello! I'm recording this conversation for quality assurance.
        language: en
        voiceId: 21m00Tcm4TlvDq8ikWAM
        llmModel: gpt-4o
        temperature: 0.7
      postCallWebhook:
        url: https://api.example.com/webhooks/elevenlabs
        method: POST
        headers:
          Authorization: Bearer webhook_secret_123
          X-Service-Name: ElevenLabs-Promptfoo
        includeTranscript: true
        includeRecording: false
        includeAnalysis: true
      evaluationCriteria:
        - name: completeness
          description: Conversation reaches satisfactory conclusion
          weight: 0.9
          passingThreshold: 0.8
      maxTurns: 10

  # Advanced: All features combined
  - id: elevenlabs:agents
    label: 'Agent: All Advanced Features'
    config:
      agentConfig:
        name: Ultimate Support Agent
        prompt: |
          You are an advanced AI support agent with access to multiple tools,
          intelligent LLM cascading, and multi-voice capabilities.
        firstMessage: Welcome! I'm your advanced AI assistant with full capabilities.
        language: en
        voiceId: 21m00Tcm4TlvDq8ikWAM
        temperature: 0.7
        tools:
          - name: get_order_status
            description: Check order status
            parameters:
              type: object
              properties:
                order_id:
                  type: string
              required:
                - order_id
      llmCascade:
        primary: gpt-4o
        fallback:
          - claude-sonnet-4-5-20250929
          - gpt-4o-mini
        cascadeOnError: true
        cascadeOnLatency:
          enabled: true
          maxLatencyMs: 4000
      multiVoice:
        characters:
          - name: Agent
            voiceId: 21m00Tcm4TlvDq8ikWAM
            role: AI support agent
          - name: Customer
            voiceId: 2EiwWnXFnvU5JabPnv8n
            role: Customer
        defaultVoiceId: 21m00Tcm4TlvDq8ikWAM
      postCallWebhook:
        url: https://api.example.com/webhooks/agents
        includeTranscript: true
        includeAnalysis: true
      evaluationCriteria:
        - name: greeting
          description: Professional greeting
          weight: 0.7
          passingThreshold: 0.8
        - name: understanding
          description: Understands user intent
          weight: 1.0
          passingThreshold: 0.9
        - name: accuracy
          description: Provides accurate information
          weight: 1.0
          passingThreshold: 0.9
        - name: helpfulness
          description: Helpful and actionable responses
          weight: 0.9
          passingThreshold: 0.8
        - name: professionalism
          description: Professional tone throughout
          weight: 0.7
          passingThreshold: 0.8
        - name: resolution
          description: Successfully resolves user issues
          weight: 1.0
          passingThreshold: 0.8
      simulatedUser:
        prompt: |
          Act as a customer who has a moderately complex issue.
          Be polite but persistent in getting your issue resolved.
        temperature: 0.8
        responseStyle: casual
      maxTurns: 15

tests:
  - description: Conversation completes successfully
    assert:
      - type: javascript
        value: |
          const result = typeof output === 'string' ? JSON.parse(output) : output;
          return result.status === 'completed' || result.conversation_id;

  - description: Multiple evaluation criteria pass
    assert:
      - type: javascript
        value: |
          const result = typeof output === 'string' ? JSON.parse(output) : output;
          if (!result.analysis?.evaluation_criteria_results) return false;
          const passed = result.analysis.evaluation_criteria_results.filter(r => r.passed);
          return passed.length >= 3;

  - description: Overall evaluation score is good
    assert:
      - type: javascript
        value: |
          const result = typeof output === 'string' ? JSON.parse(output) : output;
          if (!result.analysis?.evaluation_criteria_results) return false;
          const scores = result.analysis.evaluation_criteria_results.map(r => r.score);
          const avgScore = scores.reduce((a, b) => a + b, 0) / scores.length;
          return avgScore >= 0.7;

  - description: Tools are used when appropriate
    assert:
      - type: javascript
        value: |
          const result = typeof output === 'string' ? JSON.parse(output) : output;
          if (!result.history) return true; // Not all tests use tools
          const toolCalls = result.history.some(turn =>
            turn.metadata?.toolCalls && turn.metadata.toolCalls.length > 0
          );
          return toolCalls || !output.includes('get_order_status'); // Pass if tools used OR not needed

  - description: LLM cascade metadata present
    assert:
      - type: javascript
        value: |
          const result = typeof output === 'string' ? JSON.parse(output) : output;
          // Pass if cascade metadata exists OR if using non-cascade provider
          return result.llm_usage || !output.includes('llmCascade');

  - description: Cost is within budget
    assert:
      - type: cost
        threshold: 1.00

  - description: Latency is acceptable for agents
    assert:
      - type: latency
        threshold: 45000
