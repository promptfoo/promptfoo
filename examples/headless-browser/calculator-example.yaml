# yaml-language-server: $schema=https://promptfoo.dev/config-schema.json
description: 'Testing calculator functionality with browser automation'

prompts:
  - 'Calculate {{num1}} {{operation}} {{num2}}'

providers:
  - id: browser
    config:
      headless: false # Watch the automation in action
      steps:
        # Respectful initial delay
        - action: wait
          args:
            ms: 2000
        
        # Navigate to the Gradio app
        - action: navigate
          args:
            url: 'http://localhost:7860'
        
        # Wait for page load
        - action: wait
          args:
            ms: 2000
        
        # Click on Calculator Demo tab - using button[role="tab"] selector
        - action: click
          args:
            selector: 'button[role="tab"]:nth-of-type(2)'
        
        # Wait for tab to load
        - action: wait
          args:
            ms: 1000
        
                # Enter first number
        - action: type
          args:
            selector: '#num1 input'
            text: '{{num1}}'
        
        # Small delay after typing
        - action: wait
          args:
            ms: 500

        # Enter second number
        - action: type
          args:
            selector: '#num2 input'
            text: '{{num2}}'
            
        # Small delay after typing
        - action: wait
          args:
            ms: 500
        
        # Select operation - click the radio button for the operation
        - action: click
          args:
            selector: 'input[type="radio"][value="{{operation}}"]'
        
                # Click calculate button
        - action: click
          args:
            selector: '#calculate'

        # Wait for result to be calculated
        - action: wait
          args:
            ms: 2000

        # Extract result - Gradio textbox might use textarea or special structure
        - action: extract
          args:
            selector: '[data-testid="textbox"]:last-of-type'
          name: result
      
      transformResponse: 'extracted.result'

tests:
  - vars:
      num1: "10"
      num2: "5"
      operation: "Add"
    assert:
      - type: equals
        value: "15"
  
  - vars:
      num1: "20"
      num2: "4"
      operation: "Multiply"
    assert:
      - type: equals
        value: "80"
  
  - vars:
      num1: "100"
      num2: "0"
      operation: "Divide"
    assert:
      - type: contains
        value: "Error" 