# yaml-language-server: $schema=https://promptfoo.dev/config-schema.json

description: Custom provider with simulated user conversations

prompts:
  - You are a helpful customer service agent. Use the provided workflow and session information to assist customers professionally.

providers:
  - id: file://provider.py
    config:
      timeout: 30

defaultTest:
  provider:
    id: promptfoo:simulated-user
    config:
      maxTurns: 4

tests:
  - vars:
      workflow_id: "wf-booking-001"
      session_id: "sess-customer-12345"
      user_name: "Alice"
      instructions: |
        You are Alice, a customer who needs help with a flight booking. Start by greeting 
        the agent and asking for help. Ask about your workflow status if mentioned.
    assert:
      - type: contains
        value: "Alice"
      - type: contains
        value: "wf-booking-001"
      - type: llm-rubric
        value: |
          The conversation should be professional and include workflow tracking information.
          Pass if: Agent uses the customer's name and references the workflow ID.
          Fail if: Agent doesn't personalize responses or ignores workflow context.

  - vars:
      workflow_id: "wf-support-202"
      session_id: "sess-customer-67890"
      user_name: "Bob"
      instructions: |
        You are Bob, a customer who wants to check the status of an existing request. 
        Ask about your workflow status and session information.
    assert:
      - type: contains
        value: "Bob"
      - type: contains
        value: "wf-support-202"
      - type: llm-rubric
        value: |
          The agent should provide workflow status information when requested.
          Pass if: Agent mentions the workflow status and session ID.
          Fail if: Agent doesn't address the status inquiry appropriately.

  - vars:
      workflow_id: "wf-urgent-303"
      session_id: "sess-customer-11111"
      user_name: "Charlie"
      instructions: |
        You are Charlie, a polite customer who needs assistance with a booking, 
        then thanks the agent and says goodbye to end the conversation naturally.
    assert:
      - type: contains
        value: "Charlie"
      - type: contains
        value: "###STOP###"
      - type: llm-rubric
        value: |
          The conversation should end naturally when the customer says goodbye.
          Pass if: Agent provides helpful service and ends with ###STOP### marker.
          Fail if: Conversation doesn't end appropriately or lacks professionalism. 