# yaml-language-server: $schema=https://promptfoo.dev/config-schema.json
description: Evaluate Azure OpenAI vision models on image analysis tasks

prompts:
  # Vision models require a specific message format with content arrays
  - file://prompt.json

providers:
  # Update with your Azure OpenAI deployment details
  - id: azure:chat:gpt-4o
    config:
      apiHost: your-deployment.openai.azure.com
      apiVersion: 2024-02-15-preview
      temperature: 0.1
      max_tokens: 500

tests:
  # Example 1: Wildlife recognition with URL
  - vars:
      question: What animal is in this image? Identify the species if possible.
      image_url: https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Red_Panda_%2824986761703%29.jpg/640px-Red_Panda_%2824986761703%29.jpg
    assert:
      - type: contains
        value: red panda
      - type: javascript
        value: output.toLowerCase().includes('ailurus fulgens') || output.toLowerCase().includes('lesser panda')

  # Example 2: OCR with local file
  - vars:
      question: What text can you read in this sign?
      image_url: file://assets/street-sign.jpg
    assert:
      - type: contains
        value: STOP
      - type: llm-rubric
        value: The model correctly identifies this as a stop sign

  # Example 3: Complex scene understanding with base64
  - vars:
      question: Describe the scene in detail. What''s the weather like? What time of day might it be?
      image_url: file://assets/landscape.jpg
    assert:
      - type: llm-rubric
        value: The model provides a detailed description including weather conditions, time of day, and environmental details

  # Example 4: Art analysis with base64 (fun example)
  - vars:
      question: You are an art critic. Analyze this artwork and describe its artistic merit.
      image_url: file://assets/abstract-art.png
    assert:
      - type: llm-rubric
        value: The response provides thoughtful artistic analysis with appropriate art terminology
# Note: If you see 401 errors, ensure:
# 1. Your AZURE_API_KEY environment variable is set correctly
# 2. The apiHost matches your Azure OpenAI resource name
# 3. Your deployment supports vision (GPT-4V, GPT-4 Turbo with Vision, GPT-4.1)
