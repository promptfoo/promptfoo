# yaml-language-server: $schema=https://promptfoo.dev/config-schema.json
description: 'üñºÔ∏è Image Input + Image Output Test Suite'

prompts:
  # Image input with image output requests
  - |
    Look at this image and create a new image based on it: {{transformation}}

    {{smiley_image}}

  - |
    Take the style from this image and apply it to: {{new_subject}}

    {{smiley_image}}

providers:
  - id: google:gemini-2.5-flash-image-preview
    label: 'Image Input+Output üé®'
    config:
      generationConfig:
        temperature: 0.8
        maxOutputTokens: 1024
        responseModalities:
          - IMAGE
          - TEXT

tests:
  # üé≠ Image transformation tests
  - description: 'üòä‚û°Ô∏èü§ñ Transform smiley to robot'
    vars:
      smiley_image: '{{smiley}}'
      transformation: 'Transform this smiley face into a futuristic robot version with glowing LED eyes and metallic texture'
    assert:
      - type: contains
        value: '![Generated Image]'
      - type: cost
        threshold: 0.10 # Higher threshold for image input
      - type: javascript
        value: |
          // Should contain both analysis of input image AND new generated image
          const hasInputAnalysis = output.toLowerCase().includes('smiley') || 
                                 output.toLowerCase().includes('face') ||
                                 output.toLowerCase().includes('yellow');
          const hasNewImage = output.includes('![Generated Image]') && output.includes('data:image');

          return { 
            pass: hasInputAnalysis && hasNewImage, 
            score: hasInputAnalysis && hasNewImage ? 1 : 0,
            reason: `Input analysis: ${hasInputAnalysis}, New image: ${hasNewImage}`
          };

  - description: 'üé® Style transfer to dragon'
    vars:
      smiley_image: '{{smiley}}'
      new_subject: 'a majestic dragon breathing rainbow fire'
    assert:
      - type: contains
        value: 'data:image'
      - type: cost
        threshold: 0.10

  - description: 'üåà Color scheme inspiration'
    vars:
      smiley_image: '{{smiley}}'
      transformation: 'Create a sunset landscape using the same bright, cheerful color palette as this image'
    assert:
      - type: contains
        value: '![Generated Image]'
      - type: cost
        threshold: 0.10

# Test variables - the smiley face base64 image
vars:
  smiley: 'iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAIAAAAiOjnJAAAFDklEQVR4nO3d0a6bMBBFUabq//+y+xAJkUARSnxgzsxez80N2Pva3IQmMcZYgNn+TP+JAGFBhbAgQViQICxIEBYkCAsShAUJwoIEYUGCsCBBWJAgLEgQFiQICxKEBQnCggRhQYKwIEFYkCAsSBAWJAgLEoQFCcKCBGFBgrAgQViQICxIEBYkCAsShAUJwoIEYUGCsCBBWJAgLEgQFiQICxKEBQnCggRhQYKwIEFYkCAsSBAWJAgLEoQFCcKCxF/Nj7UXEdf/Md9SuxcMyhclnRsMKWFN7GlvNB7bpmFd6eniwFwpc/Qb5HZhnSQ1ZSROOhudhrpRWIdJSc8+jiJrMuAtwro/qa2eeRUPa5/Ug6cbu8IKD37lsD6qSnKi8Z5X1fGvGVbOpFrlVfAtnfxVLbujkr6c9ohqK9Z2hizOLDZFVZqLOmFZLFR9tsUiW6FvVUvRbbHCimW3/XXYFu1XrDJVLe/H775ueYdVqapibRmHVa+qSm0Zh1WyqjJn5BrW+qtcYA4OredlumhZhmU61q3O1y+sqpdWxS62/MJqUpX7OZqFVf7SqszFllNYXiPbfAScwlr1Wa58z9cmrIaboPWGaBMWvHiE1Xy5cly0PMKCHYP7sb5ernZ3Zi4ZxG9HtT48+cSVXbH220WGDSRSHlXHsL67nvjfg56dxZh6VMmvtLKHtbq+8J8P+FPTEZOOKvcGaBgWvKQOi1cZfF93SB0WfBEWmoX19Tp/vm8+tasOzVGl3Q3zhvXLoP/vIc9eq415R5X/otMgrO/shz7DZIyUR6VQ+QsEcs7ZSHlU05VdsfCspGGlvSZNKFKOVdKwum0c9UYme1gwRViQICxIEBYkCAsShAUJwoIEYUGCsCBBWJAgLEgQFlqGlfKd+xQi98gkDSv5BxOkknOskoYFd4QFCcJC17CSX6U+ItKPSd6wcl6TZjOyjlLesGCt8v8r3H224pJBJDuejivWus7nv6S4Uzh8DGnqsODLJqyvF63Nx5QtBfbBSHAWFcLKvNo/a+QemexhzZXzU5NLMgjr90v4968qXR4Rm+f9fR9Mvlx5hDXFs23FjKq8eIQ15XWHp9qKSVUZLVc2Yc3y0ZY6r3h/CoceOn1J0/SPfd/3NH0MYvZTeC1Xrm/pRPw0T6/Hbud+1tssh0vgGB3/nHRasaZ/V8X5hF18iik/pNhy5ReW6HtQpi8JQ3BsXjNluRVO2RAVb/vccK3mwm/F+vg4V93hX5zUew5guE2T5Yo1xrjho4LzTOXIcyjlX8cqf6tWeF5a2Ye1Va+t8D8j47C2v8oFZqLGpVWFsEq2FSWqsg+rWFtRpSrXlxv2Pv5ItDuneP+VKDAp9ivW4Ux4LV1Rrqo6K9bNr51OFIW2v8phGW2LUXGhqrYV2m2LUbqqmitW8qUrqidVP6zDbx998HTj4LbSsoNfPKyXw3esbzvvOL6ttPiwtwjrqbyiZVLtwno5ud9Gfbvz6DTU7cJ6uXI715R73l8aDnLTsFbSGwZH47HtHpaisMGQEtaUzhjDPcKCRMG3dJABYUGCsCBBWJAgLEgQFiQICxKEBQnCggRhQYKwIEFYkCAsSBAWJAgLEoQFCcKCBGFBgrAgQViQICxIEBYkCAsShAUJwoIEYUGCsCBBWJAgLEgQFiQICxKEBQnCggRhQYKwIEFYkCAsSBAWJAgLEoQFCcKCBGFBgrAgQViQICxIEBYkCAsShIVF4R+Tds45uDfJVAAAAABJRU5ErkJggg=='
