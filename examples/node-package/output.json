{
  "_resultsLoaded": false,
  "createdAt": 1758065695513,
  "id": "eval-IF3-2025-09-16T23:34:55",
  "config": {
    "prompts": [
      {
        "raw": "Write a haiku about: {{body}}",
        "label": "Write a haiku about: {{body}}"
      },
      {
        "raw": "[{\"role\":\"system\",\"content\":\"You are speaking to a time traveler. Begin your conversation.\"},{\"role\":\"user\",\"content\":\"{{body}}\"}]",
        "label": "[{\"role\":\"system\",\"content\":\"You are speaking to a time traveler. Begin your conversation.\"},{\"role\":\"user\",\"content\":\"{{body}}\"}]"
      },
      {
        "raw": "Write 3 words about {{body}}",
        "label": "prompt.txt: Write 3 words about {{body}}"
      },
      {
        "raw": "(vars) => {\n    const genres = ['fantasy', 'sci-fi', 'mystery', 'horror'];\n    const characters = {\n      fantasy: 'wizard',\n      'sci-fi': 'alien',\n      mystery: 'detective',\n      horror: 'ghost',\n    };\n    const genre = genres[Math.floor(Math.random() * genres.length)];\n    const character = characters[genre];\n    return [\n      {\n        role: 'system',\n        content: `You have encountered a ${character} in a ${genre} setting. Engage with the character using the knowledge typical for that genre.`,\n      },\n      {\n        role: 'user',\n        content: '{{body}}',\n      },\n    ];\n  }",
        "label": ""
      }
    ],
    "providers": ["openai:gpt-4.1-mini", null],
    "tests": [
      {
        "vars": {
          "body": "Hello world"
        }
      },
      {
        "vars": {
          "body": "I'm hungry"
        },
        "assert": [
          {
            "type": "javascript"
          }
        ]
      }
    ],
    "writeLatestResults": true
  },
  "results": [],
  "prompts": [
    {
      "raw": "Write a haiku about: {{body}}",
      "label": "Write a haiku about: {{body}}",
      "id": "64a38a678decacb9c6c12748f049b7558eaf709be7fe34f2b7120605754a02e6",
      "provider": "openai:gpt-4.1-mini",
      "metrics": {
        "score": 1,
        "testPassCount": 1,
        "testFailCount": 1,
        "testErrorCount": 0,
        "assertPassCount": 0,
        "assertFailCount": 1,
        "totalLatencyMs": 40,
        "tokenUsage": {
          "prompt": 0,
          "completion": 0,
          "cached": 68,
          "total": 68,
          "numRequests": 2,
          "completionDetails": {
            "reasoning": 0,
            "acceptedPrediction": 0,
            "rejectedPrediction": 0
          },
          "assertions": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0,
            "numRequests": 0,
            "completionDetails": {
              "reasoning": 0,
              "acceptedPrediction": 0,
              "rejectedPrediction": 0
            }
          }
        },
        "namedScores": {},
        "namedScoresCount": {},
        "cost": 0.00007280000000000001
      }
    },
    {
      "raw": "[{\"role\":\"system\",\"content\":\"You are speaking to a time traveler. Begin your conversation.\"},{\"role\":\"user\",\"content\":\"{{body}}\"}]",
      "label": "[{\"role\":\"system\",\"content\":\"You are speaking to a time traveler. Begin your conversation.\"},{\"role\":\"user\",\"content\":\"{{body}}\"}]",
      "id": "13fa8ee48f9101367ab54fddbb72cc53eabc1aeacc250503e0023c99635059c7",
      "provider": "openai:gpt-4.1-mini",
      "metrics": {
        "score": 1,
        "testPassCount": 1,
        "testFailCount": 1,
        "testErrorCount": 0,
        "assertPassCount": 0,
        "assertFailCount": 1,
        "totalLatencyMs": 74,
        "tokenUsage": {
          "prompt": 0,
          "completion": 0,
          "cached": 91,
          "total": 91,
          "numRequests": 2,
          "completionDetails": {
            "reasoning": 0,
            "acceptedPrediction": 0,
            "rejectedPrediction": 0
          },
          "assertions": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0,
            "numRequests": 0,
            "completionDetails": {
              "reasoning": 0,
              "acceptedPrediction": 0,
              "rejectedPrediction": 0
            }
          }
        },
        "namedScores": {},
        "namedScoresCount": {},
        "cost": 0.00008560000000000001
      }
    },
    {
      "raw": "Write 3 words about {{body}}",
      "label": "prompt.txt: Write 3 words about {{body}}",
      "id": "16946aa0e5135cee46b889df493c8c8c6033b45b679c47143e94e39ee1854e26",
      "provider": "openai:gpt-4.1-mini",
      "metrics": {
        "score": 1,
        "testPassCount": 1,
        "testFailCount": 1,
        "testErrorCount": 0,
        "assertPassCount": 0,
        "assertFailCount": 1,
        "totalLatencyMs": 55,
        "tokenUsage": {
          "prompt": 0,
          "completion": 0,
          "cached": 37,
          "total": 37,
          "numRequests": 2,
          "completionDetails": {
            "reasoning": 0,
            "acceptedPrediction": 0,
            "rejectedPrediction": 0
          },
          "assertions": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0,
            "numRequests": 0,
            "completionDetails": {
              "reasoning": 0,
              "acceptedPrediction": 0,
              "rejectedPrediction": 0
            }
          }
        },
        "namedScores": {},
        "namedScoresCount": {},
        "cost": 0.000025600000000000002
      }
    },
    {
      "raw": "(vars) => {\n    const genres = ['fantasy', 'sci-fi', 'mystery', 'horror'];\n    const characters = {\n      fantasy: 'wizard',\n      'sci-fi': 'alien',\n      mystery: 'detective',\n      horror: 'ghost',\n    };\n    const genre = genres[Math.floor(Math.random() * genres.length)];\n    const character = characters[genre];\n    return [\n      {\n        role: 'system',\n        content: `You have encountered a ${character} in a ${genre} setting. Engage with the character using the knowledge typical for that genre.`,\n      },\n      {\n        role: 'user',\n        content: '{{body}}',\n      },\n    ];\n  }",
      "label": "",
      "id": "cffda0450e7d3fc46ddfe961b52b57210717fab072e65d6814015e756ad56b4f",
      "provider": "openai:gpt-4.1-mini",
      "metrics": {
        "score": 1,
        "testPassCount": 1,
        "testFailCount": 1,
        "testErrorCount": 0,
        "assertPassCount": 0,
        "assertFailCount": 1,
        "totalLatencyMs": 2207,
        "tokenUsage": {
          "prompt": 35,
          "completion": 22,
          "cached": 116,
          "total": 173,
          "numRequests": 2,
          "completionDetails": {
            "reasoning": 0,
            "acceptedPrediction": 0,
            "rejectedPrediction": 0
          },
          "assertions": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0,
            "numRequests": 0,
            "completionDetails": {
              "reasoning": 0,
              "acceptedPrediction": 0,
              "rejectedPrediction": 0
            }
          }
        },
        "namedScores": {},
        "namedScoresCount": {},
        "cost": 0.00019280000000000002
      }
    },
    {
      "raw": "Write a haiku about: {{body}}",
      "label": "Write a haiku about: {{body}}",
      "id": "64a38a678decacb9c6c12748f049b7558eaf709be7fe34f2b7120605754a02e6",
      "provider": "My custom function",
      "metrics": {
        "score": 1,
        "testPassCount": 1,
        "testFailCount": 1,
        "testErrorCount": 0,
        "assertPassCount": 0,
        "assertFailCount": 1,
        "totalLatencyMs": 0,
        "tokenUsage": {
          "prompt": 0,
          "completion": 0,
          "cached": 0,
          "total": 0,
          "numRequests": 2,
          "completionDetails": {
            "reasoning": 0,
            "acceptedPrediction": 0,
            "rejectedPrediction": 0
          },
          "assertions": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0,
            "numRequests": 0,
            "completionDetails": {
              "reasoning": 0,
              "acceptedPrediction": 0,
              "rejectedPrediction": 0
            }
          }
        },
        "namedScores": {},
        "namedScoresCount": {},
        "cost": 0
      }
    },
    {
      "raw": "[{\"role\":\"system\",\"content\":\"You are speaking to a time traveler. Begin your conversation.\"},{\"role\":\"user\",\"content\":\"{{body}}\"}]",
      "label": "[{\"role\":\"system\",\"content\":\"You are speaking to a time traveler. Begin your conversation.\"},{\"role\":\"user\",\"content\":\"{{body}}\"}]",
      "id": "13fa8ee48f9101367ab54fddbb72cc53eabc1aeacc250503e0023c99635059c7",
      "provider": "My custom function",
      "metrics": {
        "score": 1,
        "testPassCount": 1,
        "testFailCount": 1,
        "testErrorCount": 0,
        "assertPassCount": 0,
        "assertFailCount": 1,
        "totalLatencyMs": 0,
        "tokenUsage": {
          "prompt": 0,
          "completion": 0,
          "cached": 0,
          "total": 0,
          "numRequests": 2,
          "completionDetails": {
            "reasoning": 0,
            "acceptedPrediction": 0,
            "rejectedPrediction": 0
          },
          "assertions": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0,
            "numRequests": 0,
            "completionDetails": {
              "reasoning": 0,
              "acceptedPrediction": 0,
              "rejectedPrediction": 0
            }
          }
        },
        "namedScores": {},
        "namedScoresCount": {},
        "cost": 0
      }
    },
    {
      "raw": "Write 3 words about {{body}}",
      "label": "prompt.txt: Write 3 words about {{body}}",
      "id": "16946aa0e5135cee46b889df493c8c8c6033b45b679c47143e94e39ee1854e26",
      "provider": "My custom function",
      "metrics": {
        "score": 1,
        "testPassCount": 1,
        "testFailCount": 1,
        "testErrorCount": 0,
        "assertPassCount": 0,
        "assertFailCount": 1,
        "totalLatencyMs": 1,
        "tokenUsage": {
          "prompt": 0,
          "completion": 0,
          "cached": 0,
          "total": 0,
          "numRequests": 2,
          "completionDetails": {
            "reasoning": 0,
            "acceptedPrediction": 0,
            "rejectedPrediction": 0
          },
          "assertions": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0,
            "numRequests": 0,
            "completionDetails": {
              "reasoning": 0,
              "acceptedPrediction": 0,
              "rejectedPrediction": 0
            }
          }
        },
        "namedScores": {},
        "namedScoresCount": {},
        "cost": 0
      }
    },
    {
      "raw": "(vars) => {\n    const genres = ['fantasy', 'sci-fi', 'mystery', 'horror'];\n    const characters = {\n      fantasy: 'wizard',\n      'sci-fi': 'alien',\n      mystery: 'detective',\n      horror: 'ghost',\n    };\n    const genre = genres[Math.floor(Math.random() * genres.length)];\n    const character = characters[genre];\n    return [\n      {\n        role: 'system',\n        content: `You have encountered a ${character} in a ${genre} setting. Engage with the character using the knowledge typical for that genre.`,\n      },\n      {\n        role: 'user',\n        content: '{{body}}',\n      },\n    ];\n  }",
      "label": "",
      "id": "cffda0450e7d3fc46ddfe961b52b57210717fab072e65d6814015e756ad56b4f",
      "provider": "My custom function",
      "metrics": {
        "score": 1,
        "testPassCount": 1,
        "testFailCount": 1,
        "testErrorCount": 0,
        "assertPassCount": 0,
        "assertFailCount": 1,
        "totalLatencyMs": 0,
        "tokenUsage": {
          "prompt": 0,
          "completion": 0,
          "cached": 0,
          "total": 0,
          "numRequests": 2,
          "completionDetails": {
            "reasoning": 0,
            "acceptedPrediction": 0,
            "rejectedPrediction": 0
          },
          "assertions": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0,
            "numRequests": 0,
            "completionDetails": {
              "reasoning": 0,
              "acceptedPrediction": 0,
              "rejectedPrediction": 0
            }
          }
        },
        "namedScores": {},
        "namedScoresCount": {},
        "cost": 0
      }
    }
  ],
  "persisted": true,
  "vars": ["body"]
}
