import type { DetectorRule } from './types';

// Keep patterns relatively strict to reduce false positives
// We will add more rules over time; this is a minimal seed
export const DETECTOR_RULES: DetectorRule[] = [
  // SDK imports - JS/TS
  {
    id: 'sdk.openai.import',
    description: 'OpenAI SDK import',
    provider: 'openai',
    capability: 'unknown',
    tags: ['sdk', 'import', 'js'],
    pattern: /from\s+['\"]openai['\"]/,
    languages: ['js', 'ts', 'tsx', 'jsx'],
    confidence: 0.9,
  },
  {
    id: 'sdk.anthropic.import',
    description: 'Anthropic SDK import',
    provider: 'anthropic',
    capability: 'unknown',
    tags: ['sdk', 'import', 'js'],
    pattern: /from\s+['\"]@?anthropic['\"]/,
    languages: ['js', 'ts', 'tsx', 'jsx'],
    confidence: 0.9,
  },
  {
    id: 'sdk.azure-openai.import',
    description: 'Azure OpenAI SDK import',
    provider: 'azure-openai',
    capability: 'unknown',
    tags: ['sdk', 'import', 'js'],
    pattern: /from\s+['\"]@azure\/openai['\"]/,
    languages: ['js', 'ts', 'tsx', 'jsx'],
    confidence: 0.9,
  },
  {
    id: 'sdk.google.genai.import',
    description: 'Google Generative AI SDK import',
    provider: 'google',
    capability: 'unknown',
    tags: ['sdk', 'import', 'js'],
    pattern: /from\s+['\"]@google\/generative-ai['\"]/,
    languages: ['js', 'ts', 'tsx', 'jsx'],
    confidence: 0.9,
  },
  {
    id: 'sdk.bedrock.aws.import',
    description: 'AWS Bedrock Runtime client import',
    provider: 'aws-bedrock',
    capability: 'unknown',
    tags: ['sdk', 'import', 'js'],
    pattern: /from\s+['\"]@aws-sdk\/client-bedrock-runtime['\"]/,
    languages: ['js', 'ts', 'tsx', 'jsx'],
    confidence: 0.9,
  },
  {
    id: 'sdk.cohere.import',
    description: 'Cohere SDK import',
    provider: 'cohere',
    capability: 'unknown',
    tags: ['sdk', 'import', 'js'],
    pattern: /from\s+['\"]cohere-ai['\"]/,
    languages: ['js', 'ts', 'tsx', 'jsx'],
    confidence: 0.9,
  },
  {
    id: 'sdk.groq.import',
    description: 'Groq SDK import',
    provider: 'groq',
    capability: 'unknown',
    tags: ['sdk', 'import', 'js'],
    pattern: /from\s+['\"]groq-sdk['\"]/,
    languages: ['js', 'ts', 'tsx', 'jsx'],
    confidence: 0.9,
  },
  {
    id: 'sdk.mistral.import',
    description: 'Mistral SDK import',
    provider: 'mistral',
    capability: 'unknown',
    tags: ['sdk', 'import', 'js'],
    pattern: /from\s+['\"]@?mistral(?:ai)?['\"]/,
    languages: ['js', 'ts', 'tsx', 'jsx'],
    confidence: 0.9,
  },

  // SDK imports - Python
  {
    id: 'sdk.openai.import.py',
    description: 'OpenAI SDK import (Python)',
    provider: 'openai',
    capability: 'unknown',
    tags: ['sdk', 'import', 'py'],
    pattern: /^(?:from\s+openai\s+import|import\s+openai)\b/,
    languages: ['py'],
    confidence: 0.9,
  },
  {
    id: 'sdk.anthropic.import.py',
    description: 'Anthropic SDK import (Python)',
    provider: 'anthropic',
    capability: 'unknown',
    tags: ['sdk', 'import', 'py'],
    pattern: /^(?:from\s+anthropic\s+import|import\s+anthropic)\b/,
    languages: ['py'],
    confidence: 0.9,
  },
  {
    id: 'sdk.google.genai.import.py',
    description: 'Google Generative AI SDK import (Python)',
    provider: 'google',
    capability: 'unknown',
    tags: ['sdk', 'import', 'py'],
    pattern: /^(?:from\s+google\.generativeai\s+import|import\s+google\.generativeai)\b/,
    languages: ['py'],
    confidence: 0.9,
  },
  {
    id: 'sdk.bedrock.boto3.import.py',
    description: 'AWS Bedrock via boto3 import (Python)',
    provider: 'aws-bedrock',
    capability: 'unknown',
    tags: ['sdk', 'import', 'py'],
    pattern: /import\s+boto3|from\s+boto3\s+import/,
    languages: ['py'],
    confidence: 0.6,
  },

  // HTTP endpoints
  {
    id: 'http.openai.endpoint',
    description: 'HTTP call to OpenAI API',
    provider: 'openai',
    capability: 'unknown',
    tags: ['http'],
    pattern: /api\.openai\.com\/(?:v\d+\/)?(?:chat\/completions|completions|responses|embeddings|images|audio|moderations)/,
    confidence: 0.95,
  },
  {
    id: 'http.openai.endpoint.chat',
    description: 'OpenAI chat/completions/responses API',
    provider: 'openai',
    capability: 'chat',
    tags: ['http'],
    pattern: /api\.openai\.com\/(?:v\d+\/)?(?:chat\/completions|completions|responses)/,
    confidence: 0.95,
  },
  {
    id: 'http.openai.endpoint.embeddings',
    description: 'OpenAI embeddings API',
    provider: 'openai',
    capability: 'embeddings',
    tags: ['http'],
    pattern: /api\.openai\.com\/(?:v\d+\/)?embeddings/,
    confidence: 0.95,
  },
  {
    id: 'http.openai.endpoint.images',
    description: 'OpenAI images API',
    provider: 'openai',
    capability: 'image',
    tags: ['http'],
    pattern: /api\.openai\.com\/(?:v\d+\/)?images/,
    confidence: 0.95,
  },
  {
    id: 'http.openai.endpoint.audio',
    description: 'OpenAI audio API',
    provider: 'openai',
    capability: 'audio',
    tags: ['http'],
    pattern: /api\.openai\.com\/(?:v\d+\/)?audio/,
    confidence: 0.9,
  },
  {
    id: 'http.openai.endpoint.moderations',
    description: 'OpenAI moderations API',
    provider: 'openai',
    capability: 'moderation',
    tags: ['http'],
    pattern: /api\.openai\.com\/(?:v\d+\/)?moderations/,
    confidence: 0.9,
  },
  {
    id: 'http.anthropic.endpoint',
    description: 'HTTP call to Anthropic API',
    provider: 'anthropic',
    capability: 'chat',
    tags: ['http'],
    pattern: /api\.anthropic\.com\/(?:v\d+\/)?messages/,
    confidence: 0.95,
  },
  {
    id: 'http.google.genai.endpoint',
    description: 'HTTP call to Google Generative AI API',
    provider: 'google',
    capability: 'chat',
    tags: ['http'],
    pattern: /generativelanguage\.googleapis\.com/,
    confidence: 0.9,
  },
  {
    id: 'http.azure.openai.endpoint',
    description: 'HTTP call to Azure OpenAI API',
    provider: 'azure-openai',
    capability: 'unknown',
    tags: ['http'],
    pattern: /azure\.com\/openai|\/openai\/deployments\//,
    confidence: 0.9,
  },
  {
    id: 'http.bedrock.endpoint',
    description: 'HTTP call to AWS Bedrock runtime',
    provider: 'aws-bedrock',
    capability: 'chat',
    tags: ['http'],
    pattern: /bedrock(?:-runtime)?\./,
    confidence: 0.8,
  },
  {
    id: 'http.ollama.endpoint',
    description: 'HTTP call to Ollama local runtime',
    provider: 'ollama',
    capability: 'chat',
    tags: ['http', 'local'],
    pattern: /(?:localhost|127\.0\.0\.1|ollama)\:11434|\/api\/generate|\/api\/chat/,
    confidence: 0.8,
  },

  // Model tokens
  {
    id: 'model.openai.token',
    description: 'OpenAI model id',
    provider: 'openai',
    capability: 'unknown',
    tags: ['model'],
    pattern: /\b(?:gpt-4o(?:-mini)?|gpt-4-turbo|gpt-3\.5-turbo|text-embedding-3(?:-large|-small)?)\b/,
    confidence: 0.8,
  },
  {
    id: 'model.anthropic.token',
    description: 'Anthropic model id',
    provider: 'anthropic',
    capability: 'unknown',
    tags: ['model'],
    pattern: /\bclaude-3(?:-haiku|-sonnet|-opus)?(?:-\d+)?\b/,
    confidence: 0.8,
  },
  {
    id: 'model.gemini.token',
    description: 'Google Gemini model id',
    provider: 'google',
    capability: 'unknown',
    tags: ['model'],
    pattern: /\bgemini-[\w\-.]+\b/,
    confidence: 0.8,
  },
  {
    id: 'model.mistral.token',
    description: 'Mistral model id',
    provider: 'mistral',
    capability: 'unknown',
    tags: ['model'],
    pattern: /\bmistral-[\w\-.]+\b|\bmixtral-[\w\-.]+\b/,
    confidence: 0.8,
  },
  {
    id: 'model.llama.token',
    description: 'Llama model id',
    provider: 'llama',
    capability: 'unknown',
    tags: ['model'],
    pattern: /\bllama(?:-\d+)?[\w\-.]*\b/,
    confidence: 0.7,
  },

  // Env vars
  {
    id: 'env.openai.key',
    description: 'OpenAI API key usage',
    provider: 'openai',
    capability: 'unknown',
    tags: ['env', 'secret'],
    pattern: /OPENAI_API_KEY/,
    confidence: 0.7,
  },
  {
    id: 'env.anthropic.key',
    description: 'Anthropic API key usage',
    provider: 'anthropic',
    capability: 'unknown',
    tags: ['env', 'secret'],
    pattern: /ANTHROPIC_API_KEY/,
    confidence: 0.7,
  },
  {
    id: 'env.google.key',
    description: 'Google API key usage for GenAI',
    provider: 'google',
    capability: 'unknown',
    tags: ['env', 'secret'],
    pattern: /GOOGLE_API_KEY|GOOGLE_GENAI_API_KEY|VERTEXAI/,
    confidence: 0.6,
  },
  {
    id: 'env.azure.openai.key',
    description: 'Azure OpenAI key usage',
    provider: 'azure-openai',
    capability: 'unknown',
    tags: ['env', 'secret'],
    pattern: /AZURE_OPENAI_API_KEY|AZURE_OPENAI_ENDPOINT/,
    confidence: 0.7,
  },
  {
    id: 'env.bedrock.key',
    description: 'AWS credentials likely used for Bedrock',
    provider: 'aws-bedrock',
    capability: 'unknown',
    tags: ['env', 'secret'],
    pattern: /AWS_ACCESS_KEY_ID|AWS_SECRET_ACCESS_KEY|BEDROCK/,
    confidence: 0.4,
  },
]; 